# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: ci-node

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  # 1. ejecuta la build
  build:
    # sobre que sistema operativo se ejecuta el flujo de trabajo
    runs-on: ubuntu-latest
    # define una matriz de versiones de node.js para ejecutar el flujo de trabajo
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # define los pasos que se ejecutarán en el flujo de trabajo    
    steps:
      # clona el repositorio
    - uses: actions/checkout@v4
      # configura el token de GitHub para permitir el acceso a los repositorios privados 
    - name: Use Node.js ${{ matrix.node-version }}
      # configura la versión de node.js y habilita el cache de npm
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # instala las dependencias de node.js, construye el proyecto y corre los tests
    - run: npm ci
    - run: npm run build --if-present

  # 3. corre los tests
  test:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.result == 'success'
    steps:
      # clona el repositorio
    - uses: actions/checkout@v4
      # configura el token de GitHub para permitir el acceso a los repositorios privados 
    - name: Use Node.js ${{ matrix.node-version }}
      # configura la versión de node.js y habilita el cache de npm
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # instala las dependencias de node.js, construye el proyecto y corre los tests
    - run: npm ci
    - run: npm run build --if-present
    - name: Run tests
      run: npm test

